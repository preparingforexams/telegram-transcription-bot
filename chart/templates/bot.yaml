---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bot
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: bot
  template:
    metadata:
      labels:
        app: bot
    spec:
      serviceAccountName: bot
      terminationGracePeriodSeconds: 120
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: scratch
          ephemeral:
            volumeClaimTemplate:
              spec:
                storageClassName: "longhorn-temp"
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: "2Gi"
      initContainers:
        - name: flyway
          image: {{ .Values.rateLimiter.image }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ ALL ]
          resources:
            requests:
              cpu: 300m
              memory: 128Mi
            limits:
              cpu: 300m
          envFrom:
            - secretRef:
                name: db-config
          env:
            - name: FLYWAY_URL
              value: jdbc:postgresql://$(DB__HOST):5432/$(DB__NAME)
            - name: FLYWAY_USER
              value: $(DB__USER)
            - name: FLYWAY_PASSWORD
              value: $(DB__PASSWORD)
      containers:
        - name: app
          image: {{ .Values.image.app }}:{{ .Values.appVersion }}
          envFrom:
            - configMapRef:
                name: config
            - secretRef:
                name: db-config
            - secretRef:
                name: secrets
          env:
            - name: SCRATCH_DIR
              value: /scratch
            - name: STATE__REDIS__USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: username
            - name: STATE__REDIS__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password
            - name: STATE__REDIS__HOST
              value: "redis.prep-redis-state"
          volumeMounts:
            - mountPath: /scratch
              name: scratch
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ ALL ]
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              cpu: "1"
